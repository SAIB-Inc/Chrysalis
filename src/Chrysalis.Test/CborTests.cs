using System.Reflection;
using System.Text.Json;
using Chrysalis.Cardano.Core.Types.Block;
using Chrysalis.Cardano.Crashr.Types.Datums;
using Chrysalis.Cbor.Converters;
using Chrysalis.Cbor.Types;
using Chrysalis.Test.Types;
using Chrysalis.Test.Types.Cardano.Crashr;
using Chrysalis.Test.Types.Primitives;
using Xunit;

namespace Chrysalis.Test;

public class CborTests
{
    [Theory]
    [MemberData(nameof(BoolTestData.GetTestData), MemberType = typeof(BoolTestData))]
    [MemberData(nameof(BytesTestData.GetTestData), MemberType = typeof(BytesTestData))]
    [MemberData(nameof(IntTestData.GetTestData), MemberType = typeof(IntTestData))]
    [MemberData(nameof(LongTestData.GetTestData), MemberType = typeof(LongTestData))]
    [MemberData(nameof(UlongTestData.GetTestData), MemberType = typeof(UlongTestData))]
    [MemberData(nameof(TextTestData.GetTestData), MemberType = typeof(TextTestData))]
    public void Deserialize(TestData testData)
    {
        Assert.NotNull(testData);
        Assert.NotNull(testData.Serialized);
        Assert.NotNull(testData.Deserialized);

        byte[] data = Convert.FromHexString(testData.Serialized);
        Type actualType = testData.Deserialized.GetType();

        // Act
        MethodInfo deserializeMethod = typeof(CborSerializer)
            .GetMethod(nameof(CborSerializer.Deserialize))!
            .MakeGenericMethod(actualType);

        object? actual = deserializeMethod.Invoke(null, [data]);

        // Assert
        Assert.NotNull(actual);
        Assert.IsType(actualType, actual);
        // Assert.Equivalent(testData.Deserialized, actual);
    }

    [Theory]
    [MemberData(nameof(CrashrTestData.GetTestData), MemberType = typeof(CrashrTestData))]
    public void DeserializeCrashr(string testName, string serialized, CborBase deserialized)
    {
        Assert.NotNull(serialized);
        Assert.NotNull(deserialized);

        byte[] data = Convert.FromHexString(serialized);
        Type actualType = deserialized.GetType();

        // Act
        MethodInfo deserializeMethod = typeof(CborSerializer)
            .GetMethod(nameof(CborSerializer.Deserialize))!
            .MakeGenericMethod(actualType);

        object? actual = deserializeMethod.Invoke(null, [data]);

        // Assert
        Assert.NotNull(actual);
        Assert.IsType(actualType, actual);
        CrashrTestData.AssertListingDatumsEqual((ListingDatum)deserialized, (ListingDatum)actual);
    }

    [Theory]
    // conway
    [InlineData("85828a1a00aab3351a087627515820e13008ed2878e76bec0a7d8b9cce09bf0954b1de7df25e529a9fbb727d00a8fe5820884bda542e411996a77aa9eae42bb7135bf318f21223272e0ba8f6531c8fc6f758207939de8b59dcc48dc96903763bc544cb145c72f57c1ff6aa2d954938e92c2182825840030d6c4da9a6d75239d89d7c4d393505ff6e46c5a8281b8fbfd35a373f3587959794ccd903831a82795cb894f2d104ce397ce0e6538062b01aee71521b8fe6de5850004131777b6bd82b9d65ebf3e586ba7ea193cfc16887724a56aeaddbcce3cffc40217595bfe78cbfb26b8f4521548f8073189e82b3fdeb0a0c1099e7787cb4b166fdc6cdf0ca7041aadab8cfed55530919093358208c420c878f10208c6ea8e219c9ccf10710b8323d00581028a5246bdc6f6eb893845820dbbafa8dd141507d22f03dcbb034f32a52233ab77560476239aac53d1a19be5a1619042d5840ef364b08ab30ca2d6731fb5edb2a86d520315cedddd724b2b7ef4646d1f60ef8ade88f32e79d4beb58cec04dfc214d4743ad2f9b232a2ebfbb0e8915a8a1e70d8209015901c0261b318072ac4bee9670513ea46b31cd45a8b9af8499ad79e9b42fb5a974cefd2338981b6dd8f126541cf2d3a6bb83aff9e062124c8cbe3b6d203ea5401c0b06cc401a42831e535ed2beb69199a11aa883c07a3e4ffe3365b3828cb97abb5be0f48ed8aaa8a0d998dd337d7c893d992e8e475e9db3639afbda80a87acc5f4ba215126835530f42f69481514721a8d91de863ef6dc51c053e4846081ff6984e9833faae8ea0f1fe1896cd687099807c6915c8eeddfef74c313499d7544d61f4d8790a23c4817d53fb5d1ca22e57d4958d6dd0443626ab4446debd98e21f070793f0051c2655eff26ca34a7c5ac7bb6b129af95b73ad3b071d0297fb3b422f3c6d20f35f2131d513811f40a861dc7ba8d2f4bdb2be2113b219a05f326d635709edf49c119cc929a3728c91886e3b781a241893103c8063c98203fc7139dfa119b4b66d2ff8d796f2c53c1ac91fb3bc1ad9f18b2d58c2360820ebf5e3f40514dd10f8d54413ef3c14d2825c6eef2ffebf6771653736e13685969751d3cd31f293944d85c6c025349262e479ef4aa9531d7de3bc57ce599afdc6ec4f452e7fc89f20b076f24ea3aac036c0bc0c163c262839b1d854556570316451b20e05feadb88d84a4008182582033c0049e3b1c8a47c9c0879aa595da1eedcedb99876baa9398138fe7e5cdaf86000182a300583911464eeee89f05aff787d40045af2a40a83fd96c513197d32fbc54ff02160445e0993401c21bfcc5958fe7523c582b4036be914ce854307df5011a0c136e40028201d818590102d8798c4100581c9607a38a73da1c6c104aba3edbad7bf6ae820816407539ecf540eaf7d8798240401a0bebc2001a000927c01a00802dc3d87982581c161e4f460b61d1a78248af3f8a181a6b476e4197d7f9def3453f536a4b5341442054484520434154d879821a1908f02f1b00000002540be4001a0007a120d87982d87981581c8d9913a5d5e98c6aab297d090dd0cb4e850cf238c534b6a9dd907213d87981d87981d87981581c160445e0993401c21bfcc5958fe7523c582b4036be914ce854307df5581c8d9913a5d5e98c6aab297d090dd0cb4e850cf238c534b6a9dd90721381581cedbf33f5d6e083970648e39175c49ec1c093df76b6e6a0f1473e4776825839018d9913a5d5e98c6aab297d090dd0cb4e850cf238c534b6a9dd907213160445e0993401c21bfcc5958fe7523c582b4036be914ce854307df51a0023394c021a0002d09107582010b3cd99c9eb9ddfb67964a72cea96cd80be25fe7c8b161f3c999dc1d3358378a70081825820f8e308859e29fc128d0b70188ff5747aa7abc7dd0d339839d499ec4a03aabda9000181825839015455a2fd7ea563dbcf4dacf267d9d2326b7b7ce2b82140f536a1b8883219ec303b9f9facd2c6f49ad14a4ed5982b6553da4e90e3196a1b881a11ed14b0021a0003d0900b5820a5b75a3d7bf7ebc7e003f09fd99add064f71cc0f45035e3d80ce02c9b02bd9100d818258209349ed1f38b09100a5eaac0f4ad42441af53e70ce06bf57b566395f74a2ec1cb000e81581c5455a2fd7ea563dbcf4dacf267d9d2326b7b7ce2b82140f536a1b88812818258205ec56338104fcbfe32288c649d9633f0d9060abce8b8608b156294f0a81d29e201a800828258208f6646b372d3232eecffb9ef2cfba7b1dff3247b5fdccda22bdc4ecd7bd8042500825820f1b5a90ad9e754577b51dd476de8fbfa0d951e82cdf693346cc30fb7503b159b000183a2005839018d9913a5d5e98c6aab297d090dd0cb4e850cf238c534b6a9dd907213160445e0993401c21bfcc5958fe7523c582b4036be914ce854307df501821a0016e360a1581c161e4f460b61d1a78248af3f8a181a6b476e4197d7f9def3453f536aa14b53414420544845204341541a01005b87a300583931905ab869961b094f1b8197278cfe15b45cbe49fa8f32c6b014f85a2db2f6abf60ccde92eae1a2f4fdf65f2eaf6208d872c6f0e597cc10b0701821a70fb3dd7a2581c161e4f460b61d1a78248af3f8a181a6b476e4197d7f9def3453f536aa14b53414420544845204341541a24c0e7cc581c63f947b8d9535bc4e4ce6919e3dc056547e8d30ada12f29aa5f826b8a15820e216425600a641a314c19a32fff56f751f5bff81740f2232693d607379f3bee401028201d81858e9d87989d87982581c63f947b8d9535bc4e4ce6919e3dc056547e8d30ada12f29aa5f826b85820e216425600a641a314c19a32fff56f751f5bff81740f2232693d607379f3bee4d879824040d87982581c161e4f460b61d1a78248af3f8a181a6b476e4197d7f9def3453f536a4b53414420544845204341541b0000001166b125ce1a001373c2581cedbf33f5d6e083970648e39175c49ec1c093df76b6e6a0f1473e47761b000000028f200558581c8807fbe6e36b1c35ad6f36f0993e2fc67ab6f2db06041cfa3a53c04a581c554daf3e27e50c8c779713be6ba70f95c35f23f0552a28e5a7a340148258390122aea2da15e494e01767145d48bda16b6d437f1c449823a044193daf299a82ef56311aa10adf04c0072d4870eb9f4d5ff315132434841b741a00297bc7021a0005d19905a1581df196f5c1bee23481335ff4aece32fe1dfa1aa40a944a66d2d6edc9a9a5000b58203a98f88216e5025db28f06e90c56b3def9f35e3ac2beef37aef7f09ace7a60c00d8182582006f24741c2cbc3f59096046de95fcd5d90a77e5378d95fd60f2ec261aa5c7981000e81581cedbf33f5d6e083970648e39175c49ec1c093df76b6e6a0f1473e47761283825820b91eda29d145ab6c0bc0d6b7093cb24b131440b7b015033205476f39c690a51f00825820c4a540ac2e06c217dd4fb3f39ca3863da394ba134677dafa9b98830ca71d584d03825820b91eda29d145ab6c0bc0d6b7093cb24b131440b7b015033205476f39c690a51f01a400818258203f43134f45bcadea987e8dccbb569a4526d764787a2adb4045da6543142c8fde01018182583901b610bfca05d92c04eb6a460c2570d6d467813052608c7390daf0017d3afa303ff7969d061294da7def04496d6a87a7c6dde3acbf78a81d131a418b90e9021a00028774031a087627f484a1008182582020c38545a0a4dc453f98da0390d2dd5236bb81a7c11a73415262396cac156eeb5840c5af8bd8a617e7a07a5ae9a1babf6ff10c8ebd63d24866421eb0d597cf680f99492b144b08592ec408c1d2cf87bbe0f095e5b2d1a59839a511791ea4b1d7bd09a200818258201e2fd4178008a65e0d7d67c5fe29886dc825c48dd6be93afa90152106b9a93115840e39d41754c543a562b2664326f12369b3ee7f1088460aae06aa24a0b51b4a8f77d399fdb16f8e25cc5462a3b4fa5cce2c9c263946ff5a93ba56f0f169e76e60d0581840000d87a808219c3501a00989680a2008182582014585da9857b30cf57edccac19d3012b602bb5650c7726a5f1504d9614d205225840811625a2dd2b98db4a8ab7679d6f0e96dc8221ed925699e5e137db3e98099f4512df97e2a593a20c4acbc259e686e6838723cfc8580aae7e8648596d7e4d66060583840000d87a80821a000186a01a01c9c380840001d879830101d87980821a000864701a0d1cef0084030080821a000668a01a09896800a100818258207c344966b70455b888ed29a70cae086e24fab05e53ada41706c91a2f4ba9202f5840e4926495d6fb2d57746ffd9cb183a48f92d2836bb064631407dd5728a3cf222947153eed9ce05e7fc15541e27bc463f97cd726a3d45fb2cd4c9cef614deea409a100a10782582084d7eaaeeaaba1163a821a8b2e65865f8255a7d8d70197bcaa90465ac0559bc658202cd2d799d8afed19fb68ae8aba25178d4cb2ab4efa6536bd60afabb30560560c80")]
    public void DeserializeBlock(string cbor)
    {
        Assert.NotNull(cbor);

        byte[] cborRaw = Convert.FromHexString(cbor);
        Block block = null;
        try
        {
            for (int i = 0; i < 1000; i++)
            {
                block = CborSerializer.Deserialize<Block>(cborRaw);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }

        Assert.NotNull(block);
    }
}
