    #nullable enable
    // <auto-generated/>
    #pragma warning disable CS0109 // Ignore warnings about unnecessary 'new' keyword
    #pragma warning disbale CS0693
    #pragma warning disbale CS8604
    #pragma warning disbale CS8600
    #pragma warning disbale CS8603
    using System;
    using System.Collections.Generic;
    using System.Formats.Cbor;
    using System.Reflection;
    using Chrysalis.Cbor.Types;
    using Chrysalis.Cbor.Types.Custom;
    using Chrysalis.Cbor.Serialization.Attributes;
    

    namespace Chrysalis.Cbor.Types.Test;

    public partial record TestListMaybe
    {
        
        // Serialization implementation
        public static new void Write(CborWriter writer, global::Chrysalis.Cbor.Types.Test.TestListMaybe value)
        {
            writer.WriteStartArray(1);
// Write property: Value1
global::Chrysalis.Cbor.Types.Custom.CborMaybeIndefList<int>.Write(writer, value.Value1);
writer.WriteEndArray();

        }

        // Deserialization implementation
        public static new global::Chrysalis.Cbor.Types.Test.TestListMaybe? Read(ReadOnlyMemory<byte> data, bool preserveRaw = false)
        {
            var originalData = data;
var reader = new CborReader(data);
reader.ReadStartArray();
global::Chrysalis.Cbor.Types.Custom.CborMaybeIndefList<int> Value1 = default;
// Read property: Value1
if (reader.PeekState() == CborReaderState.Null)
{
    reader.ReadNull();
    Value1 = default;
}
else
{
    // Read the encoded value as ReadOnlyMemory<byte>
var encodedValue = reader.ReadEncodedValue();

// Deserialize using the type's Read method
Value1 = global::Chrysalis.Cbor.Types.Custom.CborMaybeIndefList<int>.Read(encodedValue);
}
reader.ReadEndArray();
var result = new global::Chrysalis.Cbor.Types.Test.TestListMaybe(
    Value1: Value1
);
if (preserveRaw)
{
    result.Raw = originalData;
}
return result;

        }

        
    }
    #pragma warning restore CS0109
    #pragma warning restore CS0693
    #pragma warning restore CS8604
    #pragma warning restore CS8600
    #pragma warning restore CS8603