// <auto-generated/>
using System;
using System.Collections.Generic;
using System.Formats.Cbor;
using Chrysalis.Cbor.Types;

namespace Chrysalis.Cbor.Types.Test;

public partial record NullableTestMap
{
    // Serialization implementation
    public static new void Write(CborWriter writer, global::Chrysalis.Cbor.Types.Test.NullableTestMap value)
    {
        writer.WriteStartMap(null);
// Write property: Value1
writer.WriteTextString("0");
writer.WriteInt32(value.Value1);
// Write property: Value2
writer.WriteTextString("1");
if (value.Value2 == null)
{
    writer.WriteNull();
}
else
{
    writer.WriteTextString(value.Value2);
}
writer.WriteEndMap();

    }

    // Deserialization implementation
    public static new global::Chrysalis.Cbor.Types.Test.NullableTestMap Read(ReadOnlyMemory<byte> data)
    {
        var originalData = data;
var reader = new CborReader(data.Span);
reader.ReadStartMap();
int Value1 = default;
string Value2 = default;
while (reader.PeekState() != CborReaderState.EndMap)
{
    string key = reader.ReadTextString();
    switch (key)
    {
        case "0":
            Value1 = reader.ReadInt32();
            break;
        case "1":
            if (reader.PeekState() == CborReaderState.Null)
{
    reader.ReadNull();
    Value2 = null;
}
else
{
    Value2 = reader.ReadTextString();
}
            break;
        default:
            reader.Skip();
            break;
    }
}
reader.ReadEndMap();
var result = new global::Chrysalis.Cbor.Types.Test.NullableTestMap(
    Value1: Value1,
    Value2: Value2
);
result.Raw = originalData;
return result;

    }   
}