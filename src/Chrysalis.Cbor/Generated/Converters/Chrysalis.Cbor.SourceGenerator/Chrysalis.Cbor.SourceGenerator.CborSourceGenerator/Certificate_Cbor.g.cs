// <auto-generated/>
using System;
using System.Collections.Generic;
using System.Formats.Cbor;
using Chrysalis.Cbor.Types;

namespace Chrysalis.Cbor.Cardano.Types.Block.Transaction.Body.Certificates;

public partial record Certificate
{
    // Serialization implementation
    public static new void Write(CborWriter writer, global::Chrysalis.Cbor.Cardano.Types.Block.Transaction.Body.Certificates.Certificate value)
    {
        // Determine the concrete type from its type name
switch (value.CborTypeName)
{
    default:
        throw new Exception($"Unknown union type: {value.CborTypeName}");
}

    }

    // Deserialization implementation
    public static new global::Chrysalis.Cbor.Cardano.Types.Block.Transaction.Body.Certificates.Certificate Read(ReadOnlyMemory<byte> data)
    {
        // Try each union case
var originalData = data;
Exception lastException = null;
throw new Exception("Could not deserialize union type", lastException);

    }   
}