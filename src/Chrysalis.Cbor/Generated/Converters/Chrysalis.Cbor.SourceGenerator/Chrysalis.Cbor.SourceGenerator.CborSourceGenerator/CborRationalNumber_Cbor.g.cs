// <auto-generated/>
using System;
using System.Collections.Generic;
using System.Formats.Cbor;
using Chrysalis.Cbor.Types;

namespace Chrysalis.Cbor.Types.Primitives;

public partial record CborRationalNumber
{
    // Serialization implementation
    public static new void Write(CborWriter writer, global::Chrysalis.Cbor.Types.Primitives.CborRationalNumber value)
    {
        writer.WriteTag(30);
writer.WriteStartMap(null);
// Write property: Numerator
writer.WriteTextString("Numerator");
writer.WriteUInt64(value.Numerator);
// Write property: Denominator
writer.WriteTextString("Denominator");
writer.WriteUInt64(value.Denominator);
writer.WriteEndMap();

    }

    // Deserialization implementation
    public static new global::Chrysalis.Cbor.Types.Primitives.CborRationalNumber Read(ReadOnlyMemory<byte> data)
    {
        var originalData = data;
var reader = new CborReader(data.Span);
if (reader.ReadTag() != 30) throw new Exception("Invalid tag");
reader.ReadStartMap();
ulong Numerator = default;
ulong Denominator = default;
while (reader.PeekState() != CborReaderState.EndMap)
{
    string key = reader.ReadTextString();
    switch (key)
    {
        case "Numerator":
            Numerator = reader.ReadUInt64();
            break;
        case "Denominator":
            Denominator = reader.ReadUInt64();
            break;
        default:
            reader.Skip();
            break;
    }
}
reader.ReadEndMap();
var result = new global::Chrysalis.Cbor.Types.Primitives.CborRationalNumber(
    Numerator: Numerator,
    Denominator: Denominator
);
result.Raw = originalData;
return result;

    }   
}