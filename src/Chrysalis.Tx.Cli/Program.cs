using Chrysalis.Cbor.Types;
using Chrysalis.Cbor.Types.Cardano.Core.Common;
using Chrysalis.Cbor.Types.Cardano.Core.Transaction;
using Chrysalis.Cbor.Types.Plutus.Address;
using Chrysalis.Tx.Builders;
using Chrysalis.Tx.Cli;
using Chrysalis.Tx.Cli.Templates;
using Chrysalis.Tx.Cli.Templates.Models;
using Chrysalis.Tx.Cli.Templates.Parameters;
using Chrysalis.Tx.Extensions;
using Chrysalis.Tx.Models;
using Chrysalis.Tx.Providers;
using Chrysalis.Wallet.Models.Addresses;
using Chrysalis.Wallet.Models.Enums;
using Chrysalis.Wallet.Models.Keys;
using Chrysalis.Wallet.Words;
using WalletAddress = Chrysalis.Wallet.Models.Addresses.Address;
using PlutusCredential = Chrysalis.Cbor.Types.Plutus.Address.Credential;
using Chrysalis.Cbor.Serialization;
using Chrysalis.Wallet.Utils;

string words = "lock drive scheme smooth staff gym laptop identify client pigeon annual run below boat perfect resource april laundry upset potato sorry inhale planet hedgehog";

Mnemonic mnemonic = Mnemonic.Restore(words, English.Words);

PrivateKey accountKey = mnemonic
            .GetRootKey()
            .Derive(PurposeType.Shelley, DerivationType.HARD)
            .Derive(CoinType.Ada, DerivationType.HARD)
            .Derive(0, DerivationType.HARD);

PrivateKey privateKey = accountKey
            .Derive(RoleType.ExternalChain)
            .Derive(0);

PublicKey pkPub = privateKey.GetPublicKey();

PublicKey skPub = accountKey
            .Derive(RoleType.Staking)
            .Derive(0)
            .GetPublicKey();


var provider = new Blockfrost("previewajMhMPYerz9Pd3GsqjayLwP5mgnNnZCC");
string tanAddress = "addr_test1qzxhwhx5ayuhcg6e7xcufy0ta6z5z2q6hwjl8m2r9cmcst0n3lfh3d6a7ege7gepfnhz2gxnm2rsvyd7yngf878k47wqjrmaqk";
string validatorAddress = "addr_test1wrffnmkn0pds0tmka6lsce88l5c9mtd90jv2u2vkfguu3rg7k7a60";
string protocolParamsAddress = "addr_test1wpr6c5g3nj3p22cq3m0q35lyzvf0ccgrajl228yha8gtadc9enk92";

// Sample transfer Tx
// var transfer = TransactionTemplateBuilder<ulong>.Create(provider)
// .AddStaticParty("tan", tanAddress, true)
// .AddInput((options, amount) =>
// {
//     options.From = "rico";
// })
// .AddOutput((options, amount) =>
// {
//     options.To = "rico";
//     options.Amount = new Lovelace(amount);

// })
// .Build();

// Transaction transferUnSignedTx = await transfer(10000000UL);
// Transaction transferSignedTx = transferUnSignedTx.Sign(privateKey);
// string txHash = await provider.SubmitTransactionAsync(transferSignedTx);
// Console.WriteLine($"Transfer Tx Hash: {txHash}");

// Sample Unlock Tx 
// RedeemerDataBuilder<UnlockParameters, CborIndefList<Indices>> withdrawRedeemerBuilder = (mapping, parameters) =>
// {
//     List<PlutusData> actions = [];
//     var (inputIndex, outputIndices) = mapping.GetInput("borrow");

//     List<ulong> outputIndicesData = [];
//     foreach (var (_, outputIndex) in outputIndices)
//     {
//         outputIndicesData.Add(outputIndex);
//     }
    
//     Indices indices = new Indices(
//         inputIndex,
//         new OutputIndices(outputIndices["main"], outputIndices["fee"], outputIndices["change"])
//     );

//     return new CborIndefList<Indices>([indices]);
// };


// RedeemerDataBuilder<UnlockParameters, PlutusData> spendRedeemerBuilder = (mapping, parameters) =>
// {
//     return new PlutusConstr([])
//     {
//         ConstrIndex = 121
//     };
// };

// string scriptRefTxHash = "54ffbc45dd2518ca808f16e516e9521023a546625ebd3d9047c5f98f312b5c4e";
// string lockTxHash = "c20293900913bbd73e6d92bafb6cad789256885ed09dae8c0da8523196ea390e";
// string withdrawalAddress = "stake_test17rffnmkn0pds0tmka6lsce88l5c9mtd90jv2u2vkfguu3rg77q9d9";

// var unlockLovelace = TransactionTemplateBuilder<UnlockParameters>.Create(provider)
//     .AddStaticParty("rico", ricoAddress, true)
//     .AddStaticParty("validator", validatorAddress)
//     .AddStaticParty("withdrawal", withdrawalAddress)
//     .AddReferenceInput((options, unlockParams) =>
//     {
//         options.From = "validator";
//         options.UtxoRef = unlockParams.ScriptRefUtxoOutref;
//     })
//     .AddInput((options, unlockParams) =>
//     {
//         options.From = "validator";
//         options.UtxoRef = unlockParams.LockedUtxoOutRef;
//         options.Id = "borrow";
//         options.SetRedeemerBuilder(spendRedeemerBuilder);
//     })
//     .AddOutput((options, unlockParams) =>
//     {
//         options.To = "rico";
//         options.Amount = unlockParams.MainAmount;
//         options.Datum = unlockParams.MainDatum;
//         options.AssociatedInputId = "borrow";
//         options.Id = "main";
//     })
//     .AddOutput((options, unlockParams) =>
//     {
//         options.To = "rico";
//         options.Amount = unlockParams.FeeAmount;
//         options.Datum = unlockParams.FeeDatum;
//         options.AssociatedInputId = "borrow";
//         options.Id = "fee";
//     })
//     .AddOutput((options, unlockParams) =>
//     {
//         options.To = "rico";
//         options.Amount = unlockParams.ChangeAmount;
//         options.Datum = unlockParams.ChangeDatum;
//         options.AssociatedInputId = "borrow";
//         options.Id = "change";
//     })
//     .AddWithdrawal((options, unlockParams) =>
//     {
//         options.From = "withdrawal";
//         options.Amount = unlockParams.WithdrawalAmount;
//         options.Id = "withdrawal";
//         options.SetRedeemerFactory(withdrawRedeemerBuilder);
//     })
//     .Build();


// UnlockParameters unlockParams = new(
//     new TransactionInput(Convert.FromHexString(lockTxHash), 0),
//     new TransactionInput(Convert.FromHexString(scriptRefTxHash), 0),
//     null,
//     new Lovelace(20000000),
//     new Lovelace(10000000),
//     new Lovelace(5000000),
//     0,
//     new InlineDatumOption(1, new CborEncodedValue(Convert.FromHexString("446D61696E"))),
//     new InlineDatumOption(1, new CborEncodedValue(Convert.FromHexString("43666565"))),
//     new InlineDatumOption(1, new CborEncodedValue(Convert.FromHexString("466368616E6765"))),
//    null
// );

// Transaction unlockUnsignedTx = await unlockLovelace(unlockParams);
// Transaction unlockSignedTx = unlockUnsignedTx.Sign(privateKey);
// string unlockTxHash = await provider.SubmitTransactionAsync(unlockSignedTx);
// Console.WriteLine($"Unlock Tx Hash: {unlockTxHash}");

// string levvyParamsAddress = "addr_test1wrzw5nxvycsz2fwk5xkrgwec430pkvpe2saghxa3xj2zqsqx78h34";
// string borrowValidatorAddress = "addr_test1wq2gmfnfs3u9mrz52munwsrdmrznk79ua40kpagmv9gas7gtzfurs";

// DeployScriptParameters deployParams = new(
//     borrowValidatorAddress, 
//     ScriptType.PlutusV3, 
//     "5935480101003229800aba4aba2aba1aba0aab9faab9eaab9dab9cab9a488888888a60022a660049211f65787065637420646174756d3a204c65767679446174756d203d206461746100168a998012492c6578706563742063697036385f646174756d3a204c65767679446174756d203d2063697036385f646174756d00168a9980124940657870656374206665655f646174756d3a20486173683c426c616b6532625f3235362c204f75747075745265666572656e63653e203d206665655f646174756d00168a998012492e657870656374206f75747075745f646174756d3a204c65767679446174756d203d206f75747075745f646174756d00168a998012493465787065637420696e7075745f646174756d3a2050726f746f636f6c506172616d73446174756d203d20696e7075745f6461746100168a998012497a65787065637420476c6f62616c506172616d7328676c6f62616c5f70726f746f636f6c5f706172616d735f646174756d29203d0a202020206765745f70726f746f636f6c5f706172616d735f646174756d28676c6f62616c5f70726f746f636f6c5f706172616d735f7265665f696e7075742e6f75747075742900168a998012495465787065637420536f6d6528676c6f62616c5f70726f746f636f6c5f706172616d735f7265665f696e70757429203d0a20202020676c6f62616c5f70726f746f636f6c5f706172616d735f7265665f696e70757400168a998012492a65787065637420616374696f6e3a20416374696f6e203d2072656465656d65725f656e7472792e326e6400168a998012491f72656465656d65723a204c6973743c4f75747075745265666572656e63653e00168a998012490d72656465656d65723a20496e74001648888888889660033001300e3754029370e90004dd2a400137009000c8c048c04cc04cc04cc04cc04cc04cc04c006460246026602660266026602660260032232330010010032259800800c528456600266e3cdd7180a800801c528c4cc008008c05800500f2026911919800800801912cc00400629422b3001300330150018a51899801001180b000a01e404d370e9001488c8cc00400400c88cc00c004c00800a6e1d20049b874801a6e1d20089180918099809800c8c048c04c0066e2120009b80480092222222222222222298009811808cc088046444b30010028a60103d87a80008acc004c04c0062602466048604a00497ae08cc00400e604c0053011001400c80f90234888c966002602800313259800800c00e264b300100180240120090048992cc004c0a800e00d005409c6eb800502a1813800a04a302337540091598009806800c4c9660020030038992cc0040060090048024012264b3001302a00380340150271bae00140a8604e0028128c08cdd5002400902020403021375400722259800980998109baa0038992cc00400600513259800800c00e007003801c4cc89660020030058992cc00400600d006803401a264b3001302c003804401d0291bae00140b060520028138dd7000981400120523026001409060446ea800e00280fa444653001001802400d001111192cc004c05c006264b300100180344c966002003007803c01e00f132598009816801c0160108150dd7000a05a302a00140a0604c6ea800e2b300130100018992cc00400600d13259800800c01e00f132598009816801c4cc04800489660020050078992cc0040063300100a800c4c008c0c000d00a402e01700b805a062302e00240b100840a86eb000600f00740b460540028140c098dd5001c566002601c00313259800800c01a264b3001001803c01e264b3001302d003899809000912cc00400a00f13259800800c66002015001898011818001a014805c02e01700b40c4605c00481620108150dd6000c01e00e8168c0a800502818131baa0038acc004c034006264b300100180344c966002003007803c01e26644b3001001804c4c96600200300a80544c96600260600071330150012259800801402a264b30010018cc004036003130023033003403500e807403a01c81a0c0c400902f402d02d1bac00180540290301816800a056375a002605800500740b460540028140c098dd5001c566002601800313259800800c01a264b3001001803c01e00f132598009816801c0160108150dd6800c01d02d1815000a0503026375400715980099b8748028006264b300100180344c966002003007803c01e264b3001302d003802c02102a1bad001803a05a302a00140a0604c6ea800e2b30013370e9006000c4c9660020030068992cc00400600f007803c01e264b3001302d003802c02102a1bae00140b460540028140c098dd5001c0150232046408c81190232046408c60486ea800a444b300130133021375400713259800800c00a264b3001001801c00e0071332259800800c016264b3001001803401a00d132598009816001c02200e8148dd6800c01902c1814800a04e375a002605000500340a4604c0028120c088dd5001c00501f488c8cc00400400c896600200314c0103d87a8000899192cc004cdc8802800c56600266e3c0140062602a6604e604a00497ae08a60103d87a80004089133004004302900340886eb8c08c004c0980050242444444453001302a008981518158044c01801a444b3001301b3029375400713259800800c00a264b30010018992cc00400600913259800800c566002606400519800801c4c966002604000313259800800c01e264b30010018acc004c0d400a264b300130230018992cc00400601513259800800c566002607000519800800c032016809201681aa01700b805c02d039181b000a06830323754005159800980e000c4c96600200300a8992cc00400601700b805c4cc896600200300d8992cc00400601d00e80744cc89660020030108992cc004006023011808c4c966002607e0070138092078375a00301140fc607800281d0dd6800981d801403903c181c800a06e375a002607000500b40e4606c00281a0c0c8dd5001402502f205e3030375400300840c9008804402201081b0c0cc00503118179baa0028acc004c0640062b3001302f37540050078032060803205840b0605a6ea800600a806200a817a00b005802c0150331818000a05c3030002801c00e00700340c4605c0028160c0a8dd5001c0050274888c966002602a60546ea80062900044dd6981718159baa00140a064b30013015302a375400314c0103d87a8000899198008009bab302f302c375400444b30010018a6103d87a8000899192cc004cdc8803000c56600266e3c0180062603e66062605e00497ae08a60103d87a800040b1133004004303300340b06eb8c0b4004c0c000502e205033004003002488888cc8966002602c00513259800804408e04713233019001225980080144c8cc004004dd5981b181b981b981b981b981b981b981b981b981b98199baa0132259800800c528c5660026464b30013020303537540031332259800800c4cc8a6002444b3001302e303c375400713259800800c00a264b30010018992cc00400600913259800800c4c9660020030068992cc004006264b300100180444c96600200313259800800c02a264b30010018acc004c12c00a2b300130383046375401313259800800c032264b3001001806c03601b1332259800800c03e264b30010018acc004c14000a330010018cc0040323300100a8acc004c0f4c12cdd500444c9660020030118992cc00400602501280944cc89660020030148992cc004006264b300100180b44c96600200313259800800c062264b30010018acc004c16400a330010058cc00400e330010018cc00403e0350194075019407101940710194071019415901980cc06603282d0c15c005055182b801405e02f01780ba0b03055001414c60aa00501580ac05602a82b0c14c0050511bad001305200280920a63050001413860986ea8022020824a020809a020809a020809a020826a02101080840410511827000a098375a002609a00500d413860960028248c11cdd5004c02d044402d048402e01700b805a0983049001411c6092005009804c0260128250c11c0050451823801401e00f007803a0903045001410c608a005005802c01600a8230c10c0050411821801400e007003801a088304100140fc607a6ea800e00281d22b3001302b3039375400713232598009816981d9baa0018992cc004cdd79820181e9baa0010078acc004cc0a00388cdd78009820981f1baa0028cc004889660026062607e6ea800e264b300100180144c966002003003801c00e0071332259800800c016264b3001001803401a00d006899912cc00400601113259800800c0260130098992cc004c13400e01700a41286eb40060128268c1280050481bae00130490024128608e0028228dd70009823001208e3044001410860806ea800e00281ea44464b300130320018992cc00400600713259800800c566002608e00519800800c01600880fa008822200900480240110481822800a086304137540091598009815800c4c9660020030038992cc0040062b300130470028cc00400600b0044081004411100480240120088240c11400504318209baa004801207c40f8607e6ea800e44b30010018a5eb82266082607c608400266004004608600282024466ebcc108c0fcdd50011821181f9baa0019182098211821182118211821000c88966002b30013371e004910100899b8f001489008a5040f519800801d22100a44100405519800801c00a00280a903d4888cdc1981799b803370400266e0cc0bccdc019b820024820225e800c00d2080897a4820225ea44b30010018a40011302133002002304300141012232330010010032259800800c530103d87a80008992cc004cdc78021bae304100189819198221821000a5eb82266006006608c00481f8c11000504248966002606000314c0103d87a80008acc004cdc4000a40011302f33041302f33041375066e05200000233041375066e0520000014bd7025eb822605e66082605e660826ea0008cc104dd4000a5eb812f5c081e103c48c104c108c108c108c10800646082608460846084003225980099b8f375c6084607e6ea8008dd71821181f9baa001899b8f375c6046607e6ea8008dd71811981f9baa0018a5040f12259800800c5200089810998010011821800a0809114c0052000a40813371466e2800a60029469001400579237286ecc00d718981e9baa0034888888888888888a6002601c01d223300122259800982198289baa0038992cc00400600513259800800c00e26644b3001001802c4c966002003006803401a26644b300100180444c966002003159800982f00144cc10c018896600200519800807c8800600700c805a01e899192cc00400601b00d806c03626644b3001001807c03e01f00f899180318328039bae00141946eb8004c178009063182e000982f80120ba804a0b6804c026013009417c60b800282d0dd6800982d801401905c182c800a0ae375600260b0005003801c00d059182b000a0a830523754007001413c44464b300130440018992cc00400600713259800800c56600260b20051598009823182a1baa0018992cc00400600b13259800800c4c9660020030078992cc004006264b3001001804c4c96600200313259800800c02e264b30010018992cc00400601b13259800800c03a01d00e899912cc00400602113259800800c56600260cc005198008064660020151980080446600200d19800800c04a0228152022812a022812a022812a0228122022831a023011808c0450671832000a0c4375a00260c600500e419060c200282f8c18400a01900c8064031062182f800a0ba305f002805402a01500a418060ba00282d8c17400a011008804402105e182d800a0b2305b002803401a00d006417060b200282b8c154dd5000c0110524011056401200900480220b43057001415460a66ea80122b3001303d0018992cc00400600713259800800c56600260b20051598009823182a1baa0018992cc00400600b13259800800c4c9660020030078992cc004006264b3001001804c4c96600200313259800800c02e264b30010018992cc00400601b13259800800c4c96600200300f8992cc00400602101080844cc89660020030128992cc004006264b300100180a44c96600200301580ac05602b132598009835801c6600202319800807c6600201b19800805c6600201319800802405e02c817a02c815202c815202c815202c814a02c814a02c8340dd7000a0d63068001419860d0005013809c04e0268348c1980050641bad001306500280820cc3063001418460c600500e807403a01c8320c18400505f1830801403201900c80620c4305f001417460be00500a805402a0148300c17400505b182e801402201100880420bc305b001416460b6005006803401a00c82e0c164005057182a9baa00180220a480220ac8024012009004416860ae00282a8c14cdd50024566002607600313259800800c00e264b30010018acc004c16400a2b300130463054375400313259800800c016264b30010018992cc00400600f13259800800c4c9660020030098992cc004006264b3001001805c4c96600200313259800800c036264b30010018992cc00400601f13259800800c04202101080844c96600260cc007198008064660020151980080446600200d19800802404a022812a022812a022812a022812202281220228318dd7000a0cc3063001418460c600500e807403a01c8320c18400505f1830801403201900c80620c4305f001417460be00500a805402a0148300c17400505b182e801402201100880420bc305b001416460b6005006803401a00c82e0c164005057182a9baa00180220a480220ac8024012009004416860ae00282a8c14cdd50024566002607400313259800800c00e264b30010018acc004c16400a3300100891001400600b00440210044159004802401200882d0c15c00505518299baa00480120a04140828105018289baa0039804804cc00c00e60a200291111199119194c004cc0b4dd6181d982b1baa036375a60b260ac6ea800660b2007232598009820182b9baa0018992cc0040063300122001800c566002608060b06ea80062607c60b26ea8c170c164dd5000c40050564149007414a0a505282920bc305b3058375400315330564912f65787065637420496e6c696e65446174756d286f75747075745f646174756d29203d206f75747075742e646174756d00164154607860ae6ea800660b260b400491112cc004c12cc164dd500244cc8966002609a60b66ea800626464b3001304f305d375400313322598009825182f9baa001899912cc004c14cc184dd5000c4c8c96600260aa60c66ea80062646644b30013058306637540031332259800acc004c13260026eacc134c1a4dd5182698349baa0079bae306c306937540e1375c609a60d26ea81c103e4528c54cc19d2413469735f676c6f62616c5f70726f746f636f6c5f706172616d735f6964656e7469666965725f70726573656e74203f2046616c73650014a083322b300159800acc004cdd7981418349baa00b010899baf30563069375401202114a0833229462a660ce92011d69735f6c657676795f747970655f636f7272656374203f2046616c73650014a083322b30015980099b89375a609c60d26ea8c134c1a4dd5005cc004dd5982698349baa304d3069375401b375c60d860d26ea8c134c1a4dd5005cdd7182698349baa304d30693754016813a29462a660ce9211e69735f6c656e645f706f736974696f6e5f76616c6964203f2046616c73650014a083322b300159800acc0056600266ebcc1b0c1a4dd5005983618349baa0098a518a99833a491e69735f6c656e6465725f64657461696c5f76616c6964203f2046616c73650014a083322b30015980099810182698349baa00b304e3069375401314a315330674912269735f7072696e636970616c5f64657461696c735f76616c6964203f2046616c73650014a083322b300159800acc004c168c1a0dd500844cc080c138c1a4dd5005981098349baa009899b8f375c60d860d26ea8c138c1a4dd50059bae306c30693754604260d26ea80250664528c54cc19d2412369735f636f6c6c61746572616c5f64657461696c735f76616c6964203f2046616c73650014a083322b300133020302130693754016604460d26ea802629462a660ce92012169735f696e7465726573745f64657461696c735f76616c6964203f2046616c73650014a083322941066452820cc8a50419914a3153306749011d69735f626f72726f775f646174756d5f76616c6964203f2046616c73650014a083322b30015980099baf306c3069375401e00314a315330674912a69735f626f72726f775f6f75747075745f73656e745f746f5f76616c696461746f72203f2046616c73650014a083322b300159800acc004c168c1a0dd500844cc8966002b30013259800acc004cdc38019bad3051306c3754604860d86ea803229462a660d49212469735f636f6c6c61746572616c5f616d6f756e745f636f7272656374203f2046616c73650014a0834a2b30015980099b87375a60a260d86ea8c144c1b0dd50064c004006007375a60a260d86ea8c140c1b0dd500720528a518a9983524811e69735f6c6f616e5f616d6f756e745f636f7272656374203f2046616c73650014a0834a2b30013370e6eb4c144c1b0dd5181298361baa00c9800800c00e6eb4c144c1b0dd5181218361baa00e40a514a3153306a4912269735f696e7465726573745f616d6f756e745f636f7272656374203f2046616c73650014a0834a2941069452820d2375a60a060d66ea8c140c1acdd5006c528c54cc1a52412369735f626f72726f775f70726f706f7274696f6e735f76616c6964203f2046616c73650014a083422b300159800cc004cdc40011bad3050306b375460a060d66ea80369429450684528c4c96600260ba60d66ea800a26464b30013056306d375400313259800800c66002440030018acc004c180c1b8dd5000c4cc8a60026eb4c158c1c4dd5182a98389baa002cc004dd5982a98389baa0059bae30743071375460aa60e26ea800a6eb8c154c1c4dd5182a98389baa00240bd9800800c01a6eb4c158c1c4dd5182a98389baa01340b89112cc0056600266ebcc0ccc1d0dd500280dc528c54cc1c92411d69735f6c657676795f747970655f636f7272656374203f2046616c73650014a0838a2b3001598009981a006183b983a1baa0088a518a998392491f69735f6368616e67655f616464726573735f76616c6964203f2046616c73650014a0838a2b30015980099baf30773074375400a60ee60e86ea805a29462a660e49211969735f6c656e6465725f636f7272656374203f2046616c73650014a0838a2b300159800acc004cdc79bae307730743754605860e86ea8058dd7183b983a1baa302c3074375400b13371e6eb8c160c1d0dd51816183a1baa016375c60b060e86ea8c0b0c1d0dd5002c52820e28a518a998392492169735f696e7465726573745f64657461696c735f76616c6964203f2046616c73650014a0838a2b300159800acc004cdc79bae30773074375460b260e86ea8058dd7183b983a1baa30593074375400b13371e6eb8c160c1d0dd5182c983a1baa016375c60b060e86ea8c164c1d0dd5002c52820e28a518a998392492369735f636f6c6c61746572616c5f64657461696c735f76616c6964203f2046616c73650014a0838a2b30015980099b87375a60b260e86ea8c164c1d0dd5002804c528c54cc1c92412469735f636f6c6c61746572616c5f616d6f756e745f636f7272656374203f2046616c73650014a0838a2b300159800acc004cdc480080144cdc3801801452820e28a518a9983924812369735f6368616e67655f616d6f756e745f61636365707461626c65203f2046616c73650014a0838a2b30015980099b890010038a518a998392492169735f6c6f616e5f616d6f756e745f61636365707461626c65203f2046616c73650014a0838a2b30015980099b87375a60b260e86ea8c0b0c1d0dd5002cc004012013375a60b260e86ea8c0b0c1d0dd500b20628a518a9983924812569735f696e7465726573745f616d6f756e745f61636365707461626c65203f2046616c73650014a0838a2b30013370e6eb4c0b4c1d0dd50029bad302d3074375402d14a315330724912069735f6c6f616e5f6475726174696f6e5f636f7272656374203f2046616c73650014a0838a2941071452820e28a5041c514a0838a2941071452820e28a5041c514a0838a29410710c1c8c1bcdd50009bad3054306f375460a860de6ea80462a660da920126657870656374204c656e64446174756d286368616e67655f646174756d29203d20646174756d001641b106b407506b835c1ae0d683a0c1c4c1b8dd5000c54cc1b124012e65787065637420496e6c696e65446174756d286461746129203d206368616e67655f6f75747075742e646174756d001641ac60a460da6ea8004c1bcc1b0dd5001454cc1a92412a65787065637420536f6d65286368616e67655f6f757470757429203d206368616e67655f6f7574707574001641a466e04dd6982818359baa3050306b375401a004834229462a660d29211f69735f7061727469616c5f626f72726f775f76616c6964203f2046616c73650014a0834229410684c004dd5982698349baa00f9bae306c30693754609c60d26ea802e6eb8c134c1a4dd5182718349baa00b409c64b3001305b306937540031330413758609e60d46ea8128dd6983698351baa0018a6103d87a8000419c609c60d26ea80522b30013370e603264b300130543069375400314bd6f7b63044dd5983698351baa001419c660866eacc134c1a4dd50079bae306c30693754609c60d26ea802cdd6982718349baa304e3069375401715980099b87375a609c60d26ea8c134c1a4dd50059bad304e30693754609c60d26ea8026266e1cdd6982718349baa3021306937540166eb4c138c1a4dd5181118349baa0098a50419914a083310664528c54cc19d24011d69735f626f72726f775f7465726d735f76616c6964203f2046616c73650014a083322b30015980099b8f002375c60ae60d26ea802629462a660ce9211c69735f646174756d5f7461675f636f7272656374203f2046616c73650014a083322b30015980099b89375a605060d26ea8024c96600260a860d26ea8006266e00dd6983698351baa001375a604660d46ea80322c8338c1b0c1a4dd5183618349baa30573069375409314a315330674912369735f6c6f616e5f656e645f74696d655f61636365707461626c65203f2046616c73650014a083322b300159800994c004c13cc1a8dd5000cdd6982798351baa3023306a3754015304e306a37540189112cc004c154c1b0dd5001c4c96600200306883441a20d1159800acc004cc0b8c1c4c1b8dd500298389839004c528c54cc1b124012869735f666565735f706169645f746f5f706c6174666f726d5f61646472657373203f2046616c73650014a0835a2b30015980099b8f375c00200f14a3153306c4911c69735f646174756d5f7461675f636f7272656374203f2046616c73650014a0835a2b30013371264b300130520018800c5200241b06466e0cdd698390009bad30723073001306e3754664460c0660e46ea0cdc11bad3073002375a60e6002660e46ea0cdc11bad30733074002375a60e660e800297ae0306e375460bc660e06ea000ccc1c13010101004bd7018371baa307100998009bab3052306e375400b375c60e260dc6ea800a6eb8c148c1b8dd500120588a518a998362491669735f666565735f656e6f756768203f2046616c73650014a0835a294106b452820d641cc60e060da6ea800e2a660d69213065787065637420496e6c696e65446174756d286665655f646174756d29203d206665655f6f75747075742e646174756d001641a8306c3069375400714a3153306749011469735f666565735f70616964203f2046616c73650014a083322b30013259800982a18349baa0018cc004dd7183698351baa306d306a3754003375a60da60d46ea80566eb8c08cc1a8dd50034dd5981198351baa04a4888966002b30013259800982b98371baa0018992cc0040063300122001800c56600260ae60de6ea800626464b3001306330713754003159800983198389baa3302d375660ea60e46ea800922105696d616765008acc004c168c08cdd5983a98391baa002899b8f9800a4001371a00d375c60ea60e46ea80057180068a998382492d657870656374206c6973742e6c656e6774682863697036385f646174756d2e6d6574616461746129203d3d2032001641bd15330704915d65787065637420536f6d65285f29203d0a2020202063697036385f646174756d2e6d65746164617461207c3e2070616972732e6765745f6669727374286279746561727261792e66726f6d5f737472696e67284022696d616765222929001641bd15330704915f65787065637420536f6d65286e616d6529203d0a2020202063697036385f646174756d2e6d65746164617461207c3e2070616972732e6765745f6669727374286279746561727261792e66726f6d5f737472696e672840226e616d65222929001641bc660586eacc1d0c1c4dd5000a45046e616d6500307330703754003153306e490134657870656374204349503638506f736974696f6e446174756d2863697036385f646174756d29203d2063697036385f646174756d001641b506b407906b835c1ae0d683a8c1c8c1bcdd5000c54cc1b524012e65787065637420496e6c696e65446174756d2863697036385f646174756d29203d206f75747075742e646174756d001641b060a660dc6ea805229462a660d892011d69735f6e66745f706f736974696f6e5f76616c6964203f2046616c73650014a0835a2b300130589800800c01330013071306e3754025488104000de14000801a046410d130589800800c01330013071306e3754025488104000643b000801a046410d14a0835a294106b22945067183618349baa00b8a518a99833a4811f69735f76616c69645f63697036385f706f736974696f6e203f2046616c73650014a083322941066452820cc8a50419914a083322941066452820cc8a50419914a0833229410661b94376660d460ce6ea802cc1a8c19cdd5182598339baa00b8a99832a492465787065637420536f6d65286665655f6f757470757429203d206665655f6f757470757400164191300130493065375400f304a3065375400f59800982b18321baa00e89981e1bac30493065375408a6eb4c1a0c194dd50074530103d87a800041889112cc004c164c19cdd5000c4c8c96600260a860d26ea800626464b3001305d306b3754003159800acc004cc160c07cdd5982818361baa004375c604860d86ea8022264b30013371e6eb8c1c0c1b4dd50041bae3070306d375460e060da6ea80062b30013371e6eb8c144c1b4dd50041bae3051306d375460e060da6ea80062b30013371e6eb8c1c0c1b4dd50039bae3070306d375460a260da6ea8006266e3cdd7182898369baa007375c60a260da6ea8c144c1b4dd5000c52820d48a5041a914a08350c144c1b0dd5001452820d2899837183798361baa0013306e3050306c375400497ae08b20d28a99835249a565787065637420536f6d652870726f746f636f6c5f66656529203d0a2020202020202020726174696f6e616c2e6e6577280a20202020202020202020706f6f6c5f70726f746f636f6c5f706172616d735f646174756d2e6665652e6e756d657261746f722c0a20202020202020202020706f6f6c5f70726f746f636f6c5f706172616d735f646174756d2e6665652e64656e6f6d696e61746f722c0a202020202020202029001641a46604a6eb4c1b8c1acdd5183718359baa001375a609e60d66ea8c1b8c1acdd5000983698351baa0018a998342496e65787065637420506f6f6c506172616d7328706f6f6c5f70726f746f636f6c5f706172616d735f646174756d29203d0a20202020202020206765745f70726f746f636f6c5f706172616d735f646174756d28706f6f6c5f70726f746f636f6c5f706172616d735f6f7574707574290016419c6078002609860d06ea8c1acc1a0dd5000c4c96600260b460d06ea80062660d660d860d26ea8004cc1acc134c1a4dd5002a5eb822a660ce9201a965787065637420536f6d652870726f746f636f6c5f66656529203d0a2020202020202020726174696f6e616c2e6e6577280a20202020202020202020676c6f62616c5f70726f746f636f6c5f706172616d735f646174756d2e6665652e6e756d657261746f722c0a20202020202020202020676c6f62616c5f70726f746f636f6c5f706172616d735f646174756d2e6665652e64656e6f6d696e61746f722c0a20202020202020202900164198660446eb4c1acc1a0dd5183598341baa004375a609860d06ea8c1acc1a0dd500220ca192cc004c15cc194dd5000c4cc0f4dd6182598331baa046375a60d260cc6ea80062980103d87a8000418c609260ca6ea8040c19cc190dd5000c16d061181b182398319baa001306530623754003058417c60c660c06ea8004c96600260a460c06ea80062660706eb0c114c184dd50209bad30643061375400314c0103d87a8000417860c601f153305e49014365787065637420426f72726f77446174756d28626f72726f775f64657461696c7329203d206765745f6c657676795f646174756d28626f72726f775f6f7574707574290016417460c260bc6ea8004c0180122a660b892143657870656374204c656e64446174756d286c656e645f64657461696c7329203d206765745f6c657676795f646174756d2873656c665f696e7075742e6f7574707574290016416c600a608260ba6ea8004c17cc170dd5000c54cc1692412465787065637420536f6d652873656c665f696e70757429203d2073656c665f696e7075740016416460ba60b46ea8010cc0c4dd6182e982d1baa03a375a60ba60b46ea8c17403a2a660b092012865787065637420536f6d6528626f72726f775f6f757470757429203d2073656c665f6f75747075740016415c305800130580013004004305600122a660769201f76578706563740a2020202020202020202020202020202020202020202072656465656d65720a2020202020202020202020202020202020202020202020207c3e206c6973742e616e79280a20202020202020202020202020202020202020202020202020202020666e286f757472656629207b0a2020202020202020202020202020202020202020202020202020202020206f7574726566203d3d2076616c6964617465645f696e7075742e6f75747075745f7265666572656e63650a202020202020202020202020202020202020202020202020202020207d2c0a202020202020202020202020202020202020202020202020202029001640e9153303b4913b6578706563742076616c6964617465645f696e7075742e6f75747075745f7265666572656e6365203d3d206f75747075745f7265666572656e6365001640e8607e60786ea80062a6607492017065787065637420536f6d652876616c6964617465645f696e70757429203d0a2020202020202020202020202020202020202020202073656c662e696e707574730a2020202020202020202020202020202020202020202020207c3e206c6973742e617428696e7075745f696e64657829001640e4660246eb0c0f8c0ecdd500d9bad303e303b3754607c60766ea8004c0f4c0e8dd5001c528a06e981c9baa003488966002605c00313259800800c0ce264b30010018acc004c10c00a3300100180240d100540d104040d206903481a2088304100140fc607a6ea801a2b300130270018992cc00400606713259800800c566002608600519800800c012068802a068820206903481a40d10441820800a07e303d375400d1598009812800c4c9660020030338992cc0040062b300130430028cc0040060090344015034410103481a40d20688220c10400503f181e9baa0068acc004c090006264b3001001819c4c966002003159800982180146600200300481a200a81a208081a40d20690344110608200281f8c0f4dd50034566002604600313259800800c0ce264b30010018acc004c10c00a3300100180240d100540d104040d206903481a2088304100140fc607a6ea801a06481d103a207440e881d044464b3001302d0018acc004c0f0dd5002400e00481ea2b300130260018acc004c0f0dd5002400e00481ea00481c9039181d1baa00322232598009816800c4c9660020030038992cc00400600900480244c9660026086007006802a080375a003004410c608000281f0c0f0dd50024566002604c003159800981e1baa004801c00903d40090392072303a375400702d816c0b605a81e8c0e4c0d8dd5000981b0014528a06630340013037001899801001181c000c528206240d513259800800c566002604860646ea8006264b300100181444c966002003029814c0a60531332259800800c0ae264b300100181640b205913259800981e801c4c020c0f402605a81d0dd6800c0b103d181d000a070375c002607200481d0c0dc00503518199baa001813a060813c09e04f02740e0606a0048198dd6004408e04681a0c0c4c0b8dd50034566002602a00513233225980080540920490248992cc004c08cc0c4dd5000c4c8c966002604a60666ea80062b300159800980bcc004dd5980c181a1baa301830343754005375c606e60686ea80ee6eb8c060c0d0dd501da0128a518a9981924813469735f676c6f62616c5f70726f746f636f6c5f706172616d735f6964656e7469666965725f70726573656e74203f2046616c73650014a0818a2b30019800980c981a1baa3037303437540033758606e6070607060706070607060706070607060686ea8052604460686ea80526eacc084c0d0dd500a24444646600200200a4464b3001302c0018998138031bae303e303b37540051598009812800c4c8cc004004dd6181f981e1baa0032259800800c528c5660026600a00a608000313300200230410018a5040e881f22b300130230018998131bac303e303b37540044660080080031598009811000c4c8cdc49bad303f001323300100137586080608200444b30010018a400113322598009980400400144c088006200281e8c104004cc008008c10800503f181d9baa0028acc004c08400626644b30013027303c3754003132598009814181e9baa3022303e37546044607c6ea8022266e2400400e266e2000400d03b1bad3040303d375400314a081d0dd6981f181d9baa002303e303b3754603e60766ea80162b30013370e9005000c4cc8966002604e60786ea8006264b30013028303d37546044607c6ea8c104c0f8dd500444cdc4801800c4cdc4001800a076375a6080607a6ea8006294103a1bad303e303b3754004607c60766ea8c0f8c0ecdd5002c4c8c8cc004004018896600200314a115980099baf003303d30410018a518998010011821000a07640fc66e9520023303d303e303b375400497ae040e081c1038207040e081c0c0e4dd5000a29462a6606492011c69735f63657274696669636174655f76616c6964203f2046616c73650014a0818a294103140ad0311803180b98199baa00130353032375400302840bc660106eb0c054c0c4dd50089bad00a812206c375a606400260646066002605c6ea801a2c815902b18159baa00423259800980b18169baa0018992cc00400626644b300130220018992cc00400605513259800800c566002606e005159800981218191baa0018992cc00400605913259800800c4c96600200302e8992cc004006264b300100181844c96600200313259800800c0ca264b3001001819c0ce067033899912cc00400606b13259800800c0da06d03681b44cc89660020030388992cc00400607303981cc0e626644b300100181dc4c96600200303c81e40f2079132598009824801c6600202319800807c6600201b01681ea04281ea03681ea04081ea08c375c0028248c1180050441bae0013045002411860860028208dd700098210012086304000140f86eb8004c0fc009040181e800a076303d002818c0c606303140f8607600281c8c0ec00a05f02f817c0bd03c181c800a06e3039002816c0b605b02d40e8606e00281a8c0ccdd5000c0ad03040ad03440ae05702b815a070303500140cc60626ea800e2b3001301b0018992cc00400605513259800800c566002606e005159800981218191baa0018992cc00400605913259800800c4c96600200302e8992cc004006264b300100181844c966002003159800981e80146600200b19800801c566002605460706ea8006264b300100181944c96600200313259800800c0d2264b30010018acc004c10400a330010038cc00400601d0354069035406903540f903581ac0d606a8210c0fc00503d181f80140ce067033819a080303d00140ec60726ea800606281b2062807a06280a206281d2063031818c0c503e181d800a072303b002817c0be05f02f40f0607200281b8c0e400a05b02d816c0b503a181b800a06a3033375400302b40c102b40d102b815c0ae05681c0c0d400503318189baa003814a05c40b82002605c6ea800604f027813c09d034181898171baa0018a998162492d65787065637420496e6c696e65446174756d28696e7075745f6461746129203d206f75747075742e646174756d001640ac6024605a6ea800445268a9980624811856616c696461746f722072657475726e65642066616c73650013656402c2612ad8799f581cdef68337867cb4f1f95b6b811fedbfcdd7780d10a95cc072077088ea47706172616d7331ff0001"
//     );


// CommonTemplates commonTemplates = new(provider, tanAddress);

// Transaction deployUnsignedTx = await commonTemplates.DeployScript(deployParams);
// Transaction deploySignedTx = deployUnsignedTx.Sign(privateKey);
// string deployTxHash = await provider.SubmitTransactionAsync(deploySignedTx);
// Console.WriteLine($"Deploy Tx Hash: {deployTxHash}");


LevvyTemplates levvyTemplates = new(provider, tanAddress);

// LockProtocolParamsParameters lockParams = new(
//     levvyParamsAddress,

// )

string policyId = "def68337867cb4f1f95b6b811fedbfcdd7780d10a95cc072077088ea";
string assetName = "706172616d7331";
string paramsValidatorAddress = "addr_test1wr00dqehse7tfu0etd4cz8ldhlxaw7qdzz54esrjqacg36sp45dt3";

WalletAddress tanMainAddress = new(tanAddress);

LevvyGlobalProtocolParams levvyGlobalProtocolParams = new(
    new GlobalParamsDetails(
        new Rational(5, 100), 
        new Chrysalis.Cbor.Types.Plutus.Address.Address(new VerificationKey(tanMainAddress.GetPaymentKeyHash()!), new None<Inline<PlutusCredential>>()),
        new Signature(tanMainAddress.GetPaymentKeyHash()!),
        Convert.FromHexString(policyId),
        [],
        [],
        []
    )
    );

LockProtocolParamsParameters lockParams = new(paramsValidatorAddress, policyId, assetName, levvyGlobalProtocolParams, null);

// Transaction lockUnsignedTx = await levvyTemplates.LockPparams(lockParams);
// Transaction lockSignedTx = lockUnsignedTx.Sign(privateKey);
// string lockParamsTxHash = await provider.SubmitTransactionAsync(lockSignedTx);
// Console.WriteLine($"Lock Params Tx Hash: {lockParamsTxHash}");

// // Levvy Lend Endpoint
// string mainValidatorAddress = "addr_test1wra8f56lfvx53trz3zk9e6n3728gqat945ycg53j7g5kvrc5qqfl0";

// var lender = new Multisig(new Signature(tanMainAddress.GetPaymentKeyHash()!));
// var principalDetails = new AssetDetails([], [], 5000000);
// var collateralDetails = new AssetDetails([], [], 5000000);
// var interestDetails = new AssetDetails([], [], 3000000);

// LendDetails lendDetails = new(lender, principalDetails, collateralDetails, interestDetails, new PosixTime(0), new Token());
// LendDatum lendDatum = new(lendDetails);
// LendParams lendParams = new(lendDatum, mainValidatorAddress);

// var multiSigLend = levvyTemplates.MultiSigLend();
// Transaction lockUnsignedTx = await multiSigLend(lendParams);
// Transaction lockSignedTx = lockUnsignedTx.Sign(privateKey);
// Console.WriteLine(Convert.ToHexString(CborSerializer.Serialize(lockSignedTx)));
// string lendTxHash = await provider.SubmitTransactionAsync(lockSignedTx);
// Console.WriteLine($"Lend Params Tx Hash: {lendTxHash}");

// var cancel = levvyTemplates.Cancel();
// TransactionInput cancelLockedUtxo1 = new(Convert.FromHexString("06de79b9e917b4f075eeb15a911620ee037c46fe297de1da4176d6eef551d928"), 0);

// CancelParams cancelParams = new([cancelLockedUtxo1], new Lovelace(10000000));

// Transaction cancelUnsignedTx = await cancel(cancelParams);
// Transaction cancelSignedTx = cancelUnsignedTx.Sign(privateKey);
// Console.WriteLine(Convert.ToHexString(CborSerializer.Serialize(cancelSignedTx)));
// string cancelTxHash = await provider.SubmitTransactionAsync(cancelSignedTx);
// Console.WriteLine($"Cancel Tx Hash: {cancelTxHash}");

// // Borrow Sample Transaction
// LevvyIdentifier lender = new Multisig(new Signature(tanMainAddress.GetPaymentKeyHash()!));
// LevvyIdentifier borrower = new Multisig(new Signature(tanMainAddress.GetPaymentKeyHash()!));

// var principalDetails = new AssetDetails([], [], 5000000);
// var collateralDetails = new AssetDetails([], [], 5000000);
// var interestDetails = new AssetDetails([], [], 3000000);

// BorrowDetails borrowDetails = new(
//     lender,
//     borrower,
//     principalDetails,
//     collateralDetails,
//     interestDetails,
//     new PosixTime(0),
//     new Token(),
//     Convert.FromHexString("81D02C4C5EF5F54D324FD0EA86D242CEE83002779ACA9D0D1BF66D82EC5939AA")
// );
// BorrowDatum borrowDatum = new(borrowDetails);

// TransactionInput borrowLockedUtxo1 = new(Convert.FromHexString("1a41ac32a4cf1dd9dfe2ecd812cc6851efbd1e1ee19457b9d6684e7c3ec61353"), 0);

// BorrowParams borrowParams = new([borrowLockedUtxo1], new Lovelace(5000000), new Lovelace(5000000), borrowDatum);

// var borrow = levvyTemplates.Borrow();
// Transaction unsignedTx = CborSerializer.Deserialize<Transaction>(Convert.FromHexString
// Transaction signedTx = unsignedTx.Sign(privateKey);
// Console.WriteLine(Convert.ToHexString(CborSerializer.Serialize(signedTx)));
// string borrowTxHash = await provider.SubmitTransactionAsync(signedTx);
// Console.WriteLine($"Transaction Id: {borrowTxHash}");

// Repay Sample Tx
LevvyIdentifier lender = new Multisig(new Signature(tanMainAddress.GetPaymentKeyHash()!));
LevvyIdentifier borrower = new Multisig(new Signature(tanMainAddress.GetPaymentKeyHash()!));

var principalDetails = new AssetDetails([], [], 5000000);
var collateralDetails = new AssetDetails([], [], 5000000);
var interestDetails = new AssetDetails([], [], 3000000);

RepayDetails repayDetails = new(
    lender,
    borrower,
    collateralDetails,
    principalDetails,
    interestDetails,
    Convert.FromHexString("8AB79DB52EBBA38FE9B4EDFBCD0F3A837AC25A35871961DB074D9C8010D4C4F7")
);
RepayDatum repayDatum = new(repayDetails);

TransactionInput repayLockedUtxo1 = new(Convert.FromHexString("25e615156cd9e10be59d9a17776ef7958d46d1f57919a5fc58a616902f0e185c"), 0);

RepayParams repayParams = new([repayLockedUtxo1], repayDatum);

var repay = levvyTemplates.Repay();
Transaction unsignedRepayTx = await repay(repayParams);
Transaction signedRepayTx = unsignedRepayTx.Sign(privateKey);
string txId = await provider.SubmitTransactionAsync(signedRepayTx);
Console.WriteLine($"Transaction Id: {txId}");