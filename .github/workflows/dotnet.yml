# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  create:
    types: [tag]
  release:
    types: [published]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 9.x.x
    
    - name: Build CodeGen Package
      run: |
        dotnet restore
        dotnet build -c Release
      working-directory: ./src/Chrysalis.Cbor.CodeGen
    
    - name: Pack CodeGen Package
      run: dotnet pack -c Release -o out
      working-directory: ./src/Chrysalis.Cbor.CodeGen
    
    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
    
    - name: Make build script executable
      run: chmod +x ./src/Chrysalis.Plutus/build-rs.sh
    
    - name: Build Plutus
      run: dotnet build -c Release
      working-directory: ./src/Chrysalis.Plutus
        
    - name: Restore dependencies
      run: dotnet restore
      working-directory: ./src/Chrysalis

    - name: Build
      run: dotnet build --no-restore
      working-directory: ./src/Chrysalis

    - name: Test
      run: dotnet test --verbosity normal
      working-directory: ./

    - name: Publish
      run: dotnet publish --no-restore
      working-directory: ./src/Chrysalis

    - name: Pack
      run: dotnet pack -c Release -o out
      working-directory: ./src/Chrysalis

    - name: Push to NuGet
      if: github.event_name == 'release' 
      run: |
        dotnet nuget push ./src/Chrysalis.Cbor.CodeGen/out/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
        dotnet nuget push ./src/Chrysalis/out/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json